service: simple-lambda-trigger
frameworkVersion: '2 || 3'

plugins:
  - serverless-dotenv-plugin
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-offline-aws-eventbridge

custom:
  serverless-offline-aws-eventbridge:

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: '20201221'
  region: ap-northeast-2
  profile: 'my-admin-profile'
  iam:
   role: 
     statements:
       - Effect: "Allow"
         Action:
           - "dynamodb:*"
           - "sqs:*"
         Resource: "*"

functions:
  producer:
    handler: src/handler.producer
    events:
      - httpApi:
          method: post
          path: /produce
  scheduler:
    handler: src/handler.scheduler
    events:
      - schedule:
          rate: cron(0 0 * * ? *) #매일 00:00에
  consumer:
    handler: src/handler.consumer
    events:
      - sqs:
          arn:
            Fn::GetAtt:
              - MyQueue
              - Arn

resources:
  Resources:
    MyQueue:
      Type: "AWS::SQS::Queue"
      Properties:
        QueueName: sqs-queue-${opt:stage, self:provider.stage}
    ScrapedPostTable:
      Type: "AWS::DynamoDB::Table"
      Properties:
        TableName: SCRAPED_POST
        AttributeDefinitions:
          - AttributeName: trending_type
            AttributeType: S
          - AttributeName: scraped_at
            AttributeType: N  
        KeySchema:
          - AttributeName: trending_type
            KeyType: HASH
          - AttributeName: scraped_at
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST
    